{% from "stats/ammo_macros.html.jinja" import ammo_macro %}
{% from "stats/heat_macros.html.jinja" import heat_macro %}
{% from "stats/direct_damage_profile_macros.html.jinja" import direct_damage_profile_macro %}
{% from "stats/indirect_damage_profile_macros.html.jinja" import indirect_damage_profile_macro %}
{% from "stats/projectile_macros.html.jinja" import projectile_macro %}
{% from "stats/lock_on_macros.html.jinja" import lock_on_macro %}
{% from "stats/fire_timing_macros.html.jinja" import fire_timing_macro %}
{% from "stats/recoil_macros.html.jinja" import recoil_macro %}
{% from "stats/cone_of_fire_macros.html.jinja" import cone_of_fire_macro %}

{% macro fire_mode_macro(
    fire_mode,
    fire_mode_background_classes,
    _loop,
    with_magdump_simulation=true,
    with_ammo=true,
    with_heat=true,
    with_direct_damage_profile=true,
    with_indirect_damage_profile=true,
    with_projectile=true,
    with_lock_on=true,
    with_timing=true,
    with_recoil=true,
    with_player_state_cone_of_fire=true
) %}
    <div class="column">
        <div class="box {{ _loop.cycle(*fire_mode_background_classes) }}">
            <p class="title is-5 has-text-black" id="fire-mode-{{ fire_mode.fire_mode_id }}">{{ fire_mode.fire_mode_type|enum_name }} {{ "ADS" if fire_mode.is_ads is true else "Hipfire" }}</p>

            <div class="box">
                <p class="title is-5">Basic information</p>

                <table class="is-table">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <td>{{ fire_mode.fire_mode_id }}</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td>{{ fire_mode.fire_mode_type|enum_name }}</td>
                        </tr>
                        <tr>
                            <th>
                                Is ADS
                            </th>
                            <td>{{ fire_mode.is_ads }}</td>
                        </tr>
                        <tr>
                            <th>
                                <span class="has-tooltip" data-tooltip="Range under which shooting creates a minimap dot for ennemies">
                                    Detect range
                                </span>
                            </th>
                            <td>{{ fire_mode.detect_range }}m</td>
                        </tr>
                        <tr>
                            <th>
                                <span class="has-tooltip" data-tooltip="Movement and turn speed multipliers">
                                    Move / turn multiplier
                                </span>
                            </th>
                            <td>{{ fire_mode.move_multiplier }}x / {{ fire_mode.turn_multiplier }}x</td>
                        </tr>
                        <tr>
                            <th>
                                <span class="has-tooltip" data-tooltip="Default zoom without any optics attachments">
                                    Zoom
                                </span>
                            </th>
                            <td>{{ fire_mode.zoom }}x</td>
                        </tr>
                        <tr>
                            <th>
                                <span class="has-tooltip" data-tooltip="Maximum number of consecutive shots before reloading or waiting for heat to dissipate">
                                    Max consecutive shots
                                </span>
                            </th>
                            <td>{{ fire_mode.max_consecutive_shots }}</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            {% if with_magdump_simulation is true and fire_mode.magdump_simulation_base_path %}
                <div class="box">
                    <p class="title is-5">
                        <span class="has-tooltip" data-tooltip="Simulation of multiple whole magazine dumps without any control">
                            Magazine dump simulation
                        </span>
                    </p>

                    <figure class="has-tooptip" data-tooltip="Click image to view interactive chart!">
                        <a href="/{{ fire_mode.magdump_simulation_base_path }}.html" target="_blank">
                            <img
                                class="image"
                                src="/{{ fire_mode.magdump_simulation_base_path }}.png"
                                style="max-width: 100%; width: auto"
                            />
                        </a>
                    </figure>
                </div>
            {% endif %}

            {% if with_ammo is true and fire_mode.ammo and fire_mode.ammo.ammo_per_shot > 0 %}
                {{ ammo_macro(ammo=fire_mode.ammo) }}
            {% endif %}

            {% if with_heat is true and fire_mode.heat and fire_mode.heat.heat_per_shot > 0 %}
                {{ heat_macro(heat=fire_mode.heat) }}
            {% endif %}

            {% if with_direct_damage_profile is true and fire_mode.direct_damage_profile %}
                {{ direct_damage_profile_macro(direct=fire_mode.direct_damage_profile) }}
            {% endif %}

            {% if with_indirect_damage_profile is true and fire_mode.indirect_damage_profile %}
                {{ indirect_damage_profile_macro(indirect=fire_mode.indirect_damage_profile) }}
            {% endif %}

            {% if with_projectile is true and fire_mode.projectile %}
                {{ projectile_macro(projectile=fire_mode.projectile) }}
            {% endif %}

            {% if with_lock_on is true and fire_mode.lock_on %}
                {{ lock_on_macro(lock_on=fire_mode.lock_on) }}
            {% endif %}

            {% if with_timing is true and fire_mode.fire_timing %}
                {{ fire_timing_macro(timing=fire_mode.fire_timing) }}
            {% endif %}

            {% if with_recoil is true and fire_mode.recoil %}
                {{ recoil_macro(recoil=fire_mode.recoil) }}
            {% endif %}

            {% if with_player_state_cone_of_fire is true and fire_mode.player_state_cone_of_fire %}
                <div class="box">
                    <p class="title is-5">Cone of fire</p>

                    {% for player_state, cone_of_fire in fire_mode.player_state_cone_of_fire|items %}
                        {{ cone_of_fire_macro(player_state=player_state, cone_of_fire=cone_of_fire) }}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </div>
{% endmacro %}
